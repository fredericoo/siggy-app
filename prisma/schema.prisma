// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Template {
  id        Int     @default(autoincrement()) @id
  title     String
  html      String
  minPrice  Int
  signatures  Signature[]
  parameters  TemplateParameter[]
}

model TemplateParameterType {
  id        Int     @default(autoincrement()) @id
  title     String
  parameters   TemplateParameter[]
}

model TemplateParameter {
  id        Int     @default(autoincrement()) @id
  title     String
  handlebar     String
  isRequired     Boolean
  isCompanyParameter     Boolean?
  template   Template? @relation(fields: [templateId], references: [id])
  templateId Int?
  type   TemplateParameterType? @relation(fields: [typeId], references: [id])
  typeId Int?
}

model Signature {
  id    String  @id @default(uuid())
  title   String
  template  Template   @relation(fields: [templateId], references: [id])
  templateId  Int
  company   Company    @relation(fields: [companySlug], references: [slug])
  companySlug   String
}

model Company {
  id        Int       @default(autoincrement()) @id
  slug      String @unique
  title     String
  domain    String?
  priceId   String
  admin     User?   @relation(fields: [adminId], references: [id])
  adminId   Int
  signatures  Signature[]
}

model User {
  id            Int       @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  companies     Company[]

  @@map(name: "users")
}

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}